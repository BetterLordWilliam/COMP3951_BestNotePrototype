using CommunityToolkit.Mvvm.ComponentModel;
using CommunityToolkit.Mvvm.Messaging;
using BestNote_3951.Messages;
using Syncfusion.Maui.PdfViewer;

/**
 * Authors: Bryson Lindy
 */
namespace BestNote_3951.ViewModels
{
    /// <summary>
    /// ViewModel for the Markdown editor. 
    /// 
    /// Houses the markdown text property that is sent via the OnMarkdownTextChanged
    /// property to any ViewModel that has been registerd to the event.
    /// </summary>
    public partial class MarkdownEditorViewModel : ObservableObject
    {
        /// <summary>
        /// Property for the markdown text to be rendered.
        /// </summary>
        [ObservableProperty]
        private string markdownText = "# Hello";

        public MarkdownEditorViewModel()
        {
            WeakReferenceMessenger.Default.Register<PdfBookmarkTomarkdownMessage>(this, (recipient, message) =>
            {
                Bookmark bookmark = message.Value;
                string link = $"[PDF Bookmark (Page {bookmark.PageNumber})](bestnote://bookmark?pg={bookmark.PageNumber})";
                MarkdownText += "\n" + link;
            });
        }

        /// <summary>
        /// Event generated by the MVVM community toolkit Observable property that allows us
        /// to communicate across Views/ViewModels. This is sent to anything that is registered
        /// with the markdown changing.
        /// </summary>
        /// <param name="oldValue"></param>
        /// <param name="newValue"></param>
        partial void OnMarkdownTextChanged(string? oldValue, string newValue)
        {
            WeakReferenceMessenger.Default.Send(new MarkdownTextChangedMessage(newValue));
        }
    }
}
